{"version":3,"file":"starcoder.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;SCTf;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;SAEA;SACA;;;;;UCzBA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;UACA;UACA;UACA;UACA;;;;;UCJA;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;UCNA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;UCNA;;UAEA;UACA;UACA;UACA;UACA;UACA;;UAEA;;UAEA;;UAEA;;UAEA;;UAEA;;UAEA;;UAEA;;;;;;;;;;;;;;;ACrBkC;AAClC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,oBAAoB,yGAA8B;AAClD,eAAe,MAAM,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAM;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA,mBAAmB,mDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA","sources":["webpack://starcoderjs/./src/actions.js","webpack://starcoderjs/webpack/bootstrap","webpack://starcoderjs/webpack/runtime/define property getters","webpack://starcoderjs/webpack/runtime/get javascript chunk filename","webpack://starcoderjs/webpack/runtime/hasOwnProperty shorthand","webpack://starcoderjs/webpack/runtime/make namespace object","webpack://starcoderjs/webpack/runtime/publicPath","webpack://starcoderjs/webpack/runtime/jsonp chunk loading","webpack://starcoderjs/./src/starcoder.js"],"sourcesContent":[" const action = {\r\n    LOAD: 0,\r\n    INITIALIZED: 1,\r\n    RUN_MAIN: 2,\r\n    WRITE_RESULT: 3,\r\n    RUN_COMPLETED: 4,\r\n    ERROR: 5\r\n}\r\n\r\nexport default action","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".starcoder.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"dist/starcoder\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import action from \"./actions.js\";\r\n\r\nexport class StarCoder{\r\n    // callback have to be defined before load_worker\r\n    constructor(\r\n        url,\r\n        init_callback,\r\n        write_result_callback,\r\n        on_complete_callback,\r\n    ){\r\n        this.url = url;\r\n        this.init_callback = init_callback;   // called back when model is loaded\r\n        this.write_result_callback = write_result_callback; // Expectes text parameter and will be called when model generates result.\r\n        this.on_complete_callback = on_complete_callback;\r\n    }\r\n    \r\n    load_worker() {\r\n        this.worker = new Worker(\r\n            new URL('./worker.js', import.meta.url)\r\n            , {type: 'module'}\r\n        );\r\n        \r\n\r\n        this.worker.onmessage = (event) => {\r\n            switch (event.data.event) {\r\n                // Load Model\r\n                case action.INITIALIZED:{\r\n                    if(this.init_callback) this.init_callback();\r\n                    break;\r\n                }\r\n\r\n                // Capture result\r\n                case action.WRITE_RESULT:{\r\n                    if(this.write_result_callback) this.write_result_callback(event.data.line);\r\n                    break;\r\n                }\r\n\r\n                // Execution Completed\r\n                case action.RUN_COMPLETED:{\r\n                    if(this.on_complete_callback) this.on_complete_callback();\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.worker.postMessage({\r\n            event: action.LOAD,\r\n            url: this.url,\r\n        });\r\n    }\r\n\r\n    run({\r\n            prompt, \r\n            seed=-1,\r\n            max_token_len = 50,\r\n            top_k = 40,\r\n            top_p = 0.9,\r\n            temp = 1.0,\r\n            repeat_last_n = 64,\r\n            repeat_penalty = 1.176\r\n    }={}){        \r\n        this.worker.postMessage({\r\n            event: action.RUN_MAIN,\r\n            prompt,\r\n            seed,\r\n            max_token_len,\r\n            top_k,\r\n            top_p,\r\n            temp,\r\n            repeat_last_n,\r\n            repeat_penalty\r\n        });\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":""}